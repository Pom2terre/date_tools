name: Deploy Flask to Azure using Azure CLI

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Important pour récupérer les tags

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install dependencies
        run: |
          pip install -r requirements.txt

          - name: 🗜️ Create deployment package
          run: |
            mkdir deploy_folder
            rsync -av --exclude='venv/' --exclude='.git/' --exclude='.github/' --exclude='__pycache__/' . deploy_folder/
            cd deploy_folder && zip -r ../deploy.zip . && cd ..
        
      - name: 🆙 Determine next version
        id: version
        run: |
          LATEST=$(git tag --sort=-v:refname | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | head -n1 || echo "v0.0.0")
          echo "Dernier tag : $LATEST"
          if [[ "$LATEST" =~ ^v?([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
            NEW_VERSION="v${MAJOR}.${MINOR}.$((PATCH + 1))"
          else
            NEW_VERSION="v0.0.1"
          fi
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Version calculée : $NEW_VERSION"

      - name: ✍️ Mettre à jour version.py
        run: |
          echo "APP_VERSION = \"${{ steps.version.outputs.NEW_VERSION }}\"" > version.py
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add version.py
          git commit -m "🔄 Mise à jour version.py → ${{ steps.version.outputs.NEW_VERSION }}"
          git fetch origin         # 👈 Ajout important
          git push origin main
        

      - name: 🏷️ Create new tag (if none in commit)
        run: |
          if [ -z "$(git tag --points-at HEAD)" ]; then
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag ${{ steps.version.outputs.NEW_VERSION }}
            git push origin ${{ steps.version.outputs.NEW_VERSION }}
          else
            echo "Tag déjà existant pour ce commit."
          fi

      - name: 🔐 Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 🛠️ Update APP_VERSION on Azure
        run: |
          VERSION=$(git tag --points-at HEAD | tail -n1)
          az webapp config appsettings set \
            --name my-python-app123 \
            --resource-group RESGrp_Linux \
            --settings APP_VERSION=$VERSION

      - name: 🚀 Deploy to Azure
        run: |
          echo "🕒 Pause avant déploiement pour stabiliser l'environnement"
          sleep 10
          az webapp deploy \
            --name my-python-app123 \
            --resource-group RESGrp_Linux \
            --src-path deploy.zip \
            --type zip

      - name: ✅ Test endpoints
        run: |
          sleep 15
          BASE="https://my-python-app123.azurewebsites.net"
          echo "### Résumé des tests" > test-summary.md

          check() {
            echo "🔹 $1" >> test-summary.md
            curl -fsSL "$BASE$2" > /dev/null \
              && echo "✅ $2 OK" >> test-summary.md \
              || echo "❌ $2 ECHEC" >> test-summary.md
          }

          check "Accueil" "/"
          check "Hello" "/hello"
          check "Jour" "/day-of-week"
          check "Durée" "/calculate-duration"

          cat test-summary.md

      - name: 📤 Upload résumé des tests
        uses: actions/upload-artifact@v4
        with:
          name: test-summary
          path: test-summary.md
