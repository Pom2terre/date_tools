name: Deploy Flask to Azure using Azure CLI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🗜️ Create clean deployment package
        run: |
          mkdir deploy_folder
          shopt -s extglob
          cp -r !(deploy_folder|.git|.github|venv|__pycache__|deploy.zip) deploy_folder/
          cd deploy_folder
          zip -r ../deploy.zip .
          cd ..

      - name: 🔐 Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 🚀 Deploy to Azure Web App via CLI
        run: |
          az webapp deploy \
            --resource-group RESGrp_Linux \
            --name my-python-app123 \
            --src-path deploy.zip \
            --type zip

      - name: 🆙 Définir APP_VERSION depuis le tag ou fallback
        run: |
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || true)
          if [ -z "$TAG" ]; then
            TIMESTAMP=$(date +'%Y.%m.%d.%H%M')
            GIT_HASH=$(git rev-parse --short HEAD)
            TAG="${TIMESTAMP}-${GIT_HASH}"
          fi

          echo "Version à utiliser : $TAG"
          az webapp config appsettings set \
            --name my-python-app123 \
            --resource-group RESGrp_Linux \
            --settings APP_VERSION=$TAG

      - name: ✅ Tester les endpoints et créer résumé
        run: |
          echo "⏳ Attente démarrage app..."
          sleep 15

          BASE_URL="https://my-python-app123.azurewebsites.net"
          PASSED=true
          SUMMARY="### 🔎 Résumé des tests\n"

          test_endpoint () {
            local path=$1
            local label=$2
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL$path")
            if [ "$STATUS" -ge 200 ] && [ "$STATUS" -lt 400 ]; then
              echo "✅ $label ($STATUS)"
              SUMMARY+="✅ \`$path\` : $STATUS\n"
            else
              echo "❌ $label ($STATUS)"
              SUMMARY+="❌ \`$path\` : $STATUS\n"
              PASSED=false
            fi
          }

          test_endpoint "/" "Accueil"
          test_endpoint "/hello" "Hello"
          test_endpoint "/calculate-duration" "Durée"
          test_endpoint "/day-of-week" "Jour de la semaine"
          test_endpoint "/version-debug" "Version"

          echo -e "$SUMMARY" > test-summary.md
          cat test-summary.md

          if [ "$PASSED" = false ]; then
            exit 1
          fi

      - name: 📤 Publier le résumé en tant qu’artefact
        uses: actions/upload-artifact@v4
        with:
          name: test-summary
          path: test-summary.md
